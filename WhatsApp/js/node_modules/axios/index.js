﻿require((exports, module) => {

    const stream = require("stream");

    class axiosStream extends stream.Readable {
        constructor(response) {
            super({read: () => {}});
            this.response = response;

            this.pipe = async function(output) {
                const reader = this.response.body.getReader();
                let result = await reader.read();
                while (!result.done) {
                    if (result.value) {
                        output._transform(Buffer.from(result.value), [], () => {});
                    }
                    result = await reader.read();
                }
                output._final(() => {});
                return output;
            }
        }
    }

    module.exports = { 
        get: async (url, options) => { 
            const response = await fetch(url, options);
            return { data: new axiosStream(response) };
        }
    };
});