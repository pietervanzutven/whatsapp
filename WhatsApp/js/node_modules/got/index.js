require((exports, module) => {

    const stream = require("stream");

    class gotStream extends stream.Readable {
        constructor(url, options) {
            super({read: () => {}});
            this.url = Windows.Foundation.Uri(url);
            this.options = options;
            this.response = [];

            this.pipe = async function(output) {
                const reader = this.response.body.getReader();
                let result = await reader.read();
                while (!result.done) {
                    if (result.value) {
                        output._transform(Buffer.from(result.value), [], () => {});
                    }
                    result = await reader.read();
                }
                output._final(() => {});
                return output;
            }

            this.download = async function() {
                this.response = await fetch(this.url, this.options);
                this.emit("response", {statusCode: this.response.status});
            }

            this.download();
        }
    }

    module.exports = { stream: (url, options) => new gotStream(url, options)}
});